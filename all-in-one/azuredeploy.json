{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "branch": {
      "type": "string",
      "defaultValue": "main",
      "allowedValues": ["main", "dev"],
      "metadata": {
        "description": "Git branch to deploy (main or dev)."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "OpenEMR",
      "metadata": {
        "description": "The name of you Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[toLower(concat('OpenEMR-', uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "22_04-lts-gen2",
      "allowedValues": [
              "22_04-lts-gen2"
            ],
            "metadata": {
              "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
          },
          "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
              "description": "Location for all resources."
            }
          },
          "VmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
              "description": "The size of the VM"
            }
          },
          "virtualNetworkName": {
            "type": "string",
            "defaultValue": "vNet",
            "metadata": {
              "description": "Name of the VNET"
            }
          },
          "subnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
              "description": "Name of the subnet in the virtual network"
            }
          },
          "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "SecGroupNet",
            "metadata": {
              "description": "Name of the Network Security Group"
            }
          },
          "deployFhirConnector": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
              "description": "Deploy FHIR Connector and Azure Health Data Services. Set to true to enable FHIR synchronization."
            }
          },
          "fhirWorkspaceName": {
            "type": "string",
            "defaultValue": "[concat('openemr-ahds-', uniqueString(resourceGroup().id))]",
            "metadata": {
              "description": "Name of the Azure Health Data Services workspace (only used if deployFhirConnector is true)."
            }
          },
          "fhirServiceName": {
            "type": "string",
            "defaultValue": "fhir",
            "metadata": {
              "description": "Name of the FHIR service (only used if deployFhirConnector is true)."
            }
          },
          "functionAppName": {
            "type": "string",
            "defaultValue": "[concat('openemr-fhir-func-', uniqueString(resourceGroup().id))]",
            "metadata": {
              "description": "Name of the Azure Function App for FHIR connector (only used if deployFhirConnector is true)."
            }
          },
          "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
              "Standard_LRS",
              "Standard_GRS",
              "Standard_RAGRS"
            ],
            "metadata": {
              "description": "Storage Account type for Function App (only used if deployFhirConnector is true)."
            }
          }
        },
        "variables": {
          "vmNameWithBranch": "[concat(parameters('vmName'), '-', parameters('branch'))]",
          "publicIpAddressName": "[concat(variables('vmNameWithBranch'), 'PublicIP' )]",
          "networkInterfaceName": "[concat(variables('vmNameWithBranch'),'NetInt')]",
          "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
          "osDiskType": "Standard_LRS",
          "subnetAddressPrefix": "10.1.0.0/24",
          "addressPrefix": "10.1.0.0/16",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "hostingPlanName": "[concat(parameters('functionAppName'), '-plan')]",
    "applicationInsightsName": "[concat(parameters('functionAppName'), '-insights')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "functionWorkerRuntime": "node"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
  "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "HTTP",
            "properties": {
              "priority": 1000,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "priority": 1001,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-06-01",
  "name": "[variables('publicIpAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIpAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
  "name": "[variables('vmNameWithBranch')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
      "osProfile": {
        "computerName": "[variables('vmNameWithBranch')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        }
      }
    },
    {
      "name": "[concat(variables('vmNameWithBranch'), '/docker')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "docker compose"
      },
      "dependsOn": [
        "[variables('vmNameWithBranch')]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/matthansen0/azure-openemr/main/all-in-one/install.sh"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "sh install.sh"
        }
      }
    },
    {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "Microsoft.HealthcareApis/workspaces",
      "apiVersion": "2022-06-01",
      "name": "[parameters('fhirWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {}
    },
    {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "Microsoft.HealthcareApis/workspaces/fhirservices",
      "apiVersion": "2022-06-01",
      "name": "[concat(parameters('fhirWorkspaceName'), '/', parameters('fhirServiceName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.HealthcareApis/workspaces', parameters('fhirWorkspaceName'))]"
      ],
      "kind": "fhir-R4",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "authenticationConfiguration": {
          "authority": "[concat('https://login.microsoftonline.com/', subscription().tenantId)]",
          "audience": "[concat('https://', parameters('fhirWorkspaceName'), '-', parameters('fhirServiceName'), '.fhir.azurehealthcareapis.com')]",
          "smartProxyEnabled": false
        },
        "corsConfiguration": {
          "origins": [],
          "headers": [],
          "methods": [],
          "maxAge": 0,
          "allowCredentials": false
        },
        "exportConfiguration": {
          "storageAccountName": ""
        }
      }
    },
    {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {}
    },
    {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~18"
            }
          ],
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2"
        },
        "httpsOnly": true
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "hostname": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "fhirServiceUrl": {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "string",
      "value": "[if(parameters('deployFhirConnector'), concat('https://', parameters('fhirWorkspaceName'), '-', parameters('fhirServiceName'), '.fhir.azurehealthcareapis.com'), 'Not deployed')]"
    },
    "functionAppName": {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "string",
      "value": "[if(parameters('deployFhirConnector'), parameters('functionAppName'), 'Not deployed')]"
    },
    "functionAppUrl": {
      "condition": "[parameters('deployFhirConnector')]",
      "type": "string",
      "value": "[if(parameters('deployFhirConnector'), concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName'))).defaultHostName), 'Not deployed')]"
    }
  }
}